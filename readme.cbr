# directories:
# - /compile/doc/stable - the files in this dir
# - /compile/source/linux-stable-cbr - the kernel sources checked out from gitrepo
# - /compile/result/stable - the resulting kernel, modules etc. tar.gz files
# - /compile/doc/kernel-config-options - https://github.com/hexdump0815/kernel-config-options
# name: stb-cbr - chromebook rockchip

# this sepearate config from av7 exists, as with av7 the system hangs on boot
# rk3288 mainline only has a light suspend mode without powering down everything
# https://irclog.whitequark.org/linux-rockchip/2018-04-03#21712549
# "for suspend/resume but at least between ChromeOS 3.14 and mainline there is a huge
# difference in handling of ddr self-refresh (not done in mainline at all, so you
# only get a light suspend)"
# "rk3288 does have a light suspend mode, without putting the ddr in self-refresh - so
# that doesn't save to much" - would need uboot or lower level support for more

cd /compile/source/linux-stable-cbr

# patches:
# raise the temp limits where thermal throttling starts
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-higher-alert-temp.patch
# improve rk3288 hdmi timing - based on https://github.com/armbian/build/pull/1887
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4004-drm-rockchip-vop-filter-modes-outside-0.5-pixel-cloc.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4005-drm-rockchip-dw_hdmi-Set-cur_ctr-to-0-always.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4006-drm-rockchip-dw_hdmi-adjust-cklvl-txlvl-for-RF-EMI.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4007-drm-rockchip-dw_hdmi-Use-auto-generated-tables.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4008-drm-rockchip-dw_hdmi-add-default-594Mhz-clk-for-4K-6.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4009-drm-rockchip-dw-hdmi-limit-tmds-to-340mhz.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4010-HACK-drm-rockchip-vop-limit-resolution-to-3840x2160.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4011-MINIARM-set-npll-be-used-for-hdmi-only.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4012-clk-rockchip-rk3288-use-npll-table-to-to-improve-HDM.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4013-clk-rockchip-rk3288-add-more-npll-clocks.patch
patch -p1 < /compile/doc/stable/misc.av7/patches/rk3288-improved-hdmi-timing/4015-FIXME-Don-t-use-vop_crtc_mode_valid.patch
# fix jackd audio for veyron
patch -p1 < /compile/doc/stable/misc.cbr/patches/veyron-fix-audio-v5.4.patch
# fix some emmc issues
patch -p1 < /compile/doc/stable/misc.cbr/patches/cadmium-veyron.fixup-emmc-from-urja.patch

export ARCH=arm
scripts/kconfig/merge_config.sh -m arch/arm/configs/multi_v7_defconfig /compile/doc/kernel-config-options/chromebooks-armv7l.cfg /compile/doc/kernel-config-options/docker-options.cfg /compile/doc/kernel-config-options/options-to-remove-generic.cfg /compile/doc/stable/misc.cbr/options/options-to-remove-special.cfg /compile/doc/kernel-config-options/additional-options-generic.cfg /compile/doc/kernel-config-options/additional-options-armv7l.cfg /compile/doc/stable/misc.cbr/options/additional-options-special.cfg
( cd /compile/doc/kernel-config-options ; git rev-parse --verify HEAD ) > /compile/doc/stable/misc.cbr/options/kernel-config-options.version
make olddefconfig
make -j 4 bzImage dtbs modules
cd tools/perf
make
cd ../power/cpupower
make
cd ../../..
export kver=`make kernelrelease`
echo ${kver}
# remove debug info if there and not wanted
#find . -type f -name '*.ko' | sudo xargs -n 1 objcopy --strip-unneeded
make modules_install
mkdir -p /lib/modules/${kver}/tools
cp -v tools/perf/perf /lib/modules/${kver}/tools
cp -v tools/power/cpupower/cpupower /lib/modules/${kver}/tools
cp -v tools/power/cpupower/libcpupower.so.0.0.1 /lib/modules/${kver}/tools/libcpupower.so.0
# make headers_install INSTALL_HDR_PATH=/usr
cp -v .config /boot/config-${kver}
cp -v arch/arm/boot/zImage /boot/zImage-${kver}
mkdir -p /boot/dtb-${kver}
cp -v arch/arm/boot/dts/rk3288-veyron-*.dtb /boot/dtb-${kver}
cp -v System.map /boot/System.map-${kver}
# start chromebook special - required: apt-get install liblz4-tool vboot-kernel-utils
cp arch/arm/boot/zImage zImage
dd if=/dev/zero of=bootloader.bin bs=512 count=1
cp /compile/doc/stable/misc.cbr/misc/cmdline cmdline
ls arch/arm/boot/dts/rk3288-veyron-*.dtb | xargs printf " -b %s" | xargs mkimage -D "-I dts -O dtb -p 2048" -f auto -A arm -O linux -T kernel -C none -a 0 -d zImage kernel.itb
vbutil_kernel --pack vmlinux.kpart --keyblock /usr/share/vboot/devkeys/kernel.keyblock --signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk --version 1 --config cmdline --bootloader bootloader.bin --vmlinuz kernel.itb --arch arm
cp -v vmlinux.kpart /boot/vmlinux.kpart-${kver}
rm -f zImage cmdline bootloader.bin kernel.itb vmlinux.kpart
# end chromebook special
cd /boot
update-initramfs -c -k ${kver}
#mkimage -A arm -O linux -T ramdisk -a 0x0 -e 0x0 -n initrd.img-${kver} -d initrd.img-${kver} uInitrd-${kver}
tar cvzf /compile/source/linux-stable-cbr/${kver}.tar.gz /boot/*-${kver} /lib/modules/${kver}
cp -v /compile/doc/stable/config.cbr /compile/doc/stable/config.cbr.old
cp -v /compile/source/linux-stable-cbr/.config /compile/doc/stable/config.cbr
cp -v /compile/source/linux-stable-cbr/.config /compile/doc/stable/config.cbr-${kver}
cp -v /compile/source/linux-stable-cbr/*.tar.gz /compile/result/stable


#
# extlinux.conf entry
#
LABEL v5150
      MENU LABEL v5.15.0 kernel via zImage mmcblk0
      LINUX ../boot/zImage-5.15.0-stb-cbr+
      INITRD ../boot/initrd.img-5.15.0-stb-cbr+
      FDT ../boot/dtb-5.15.0-stb-cbr+/rk3288-veyron-mighty.dtb
      APPEND console=tty1 gpt root=/dev/mmcblk1p4 ro rootwait net.ifnames=0 ipv6.disable=1 fsck.repair=yes
